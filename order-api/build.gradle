plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

group 'com.zerobase.cms'
version '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(path: ':zerobase-domain',configuration: 'default')

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    testImplementation('it.ozimov:embedded-redis:0.7.3'){
        exclude group: "org.slf4j", module: "slf4j-simple"
    }
    testImplementation 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.springframework.data:spring-data-envers'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.7.7'

    compileOnly 'io.springfox:springfox-swagger2:2.9.2'
    compileOnly 'io.springfox:springfox-swagger-ui:2.9.2'

}
ext{
    set('springCloudVersion',"2021.0.1")
}

dependencyManagement{
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    useJUnitPlatform()
}